Resources:
  CustomCostUsageReportDefinitionLambda:
    Metadata:
      Source: https://github.com/tobilg/cfn-cur-report-definition
      Version: 0.1.0
    Properties:
      Code:
        ZipFile: |
          !function(e,r){for(var t in r)e[t]=r[t];r.__esModule&&Object.defineProperty(e,"__esModule",{value:!0})}(exports,(()=>{var e={529:e=>{function r(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var t=function(){function e(){!function(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}(this,e),this.ap={AdditionalArtifacts:{r:!1,vv:["REDSHIFT","QUICKSIGHT","ATHENA"]},AdditionalSchemaElements:{r:!0,vv:["RESOURCES"]},Compression:{r:!0,vv:["ZIP","GZIP","Parquet"]},Format:{r:!0,vv:["textORcsv","Parquet"]},RefreshClosedReports:{r:!1},ReportName:{r:!0},ReportVersioning:{r:!1,vv:["CREATE_NEW_REPORT","OVERWRITE_REPORT"]},S3Bucket:{r:!0},S3Prefix:{r:!0},S3Region:{r:!0},TimeUnit:{r:!0,vv:["HOURLY","DAILY"]}}}var t,n;return t=e,(n=[{key:"getRequiredProps",value:function(){var e=this;return Object.getOwnPropertyNames(this.ap).filter((function(r){return e.ap[r].r}))}},{key:"arrayContainsArray",value:function(e,r){return 0!==r.length&&r.every((function(r){return e.indexOf(r)>=0}))}},{key:"getConfiguration",value:function(e){var r=this,t=this.getRequiredProps(),n=Object.assign({},e);delete n.ServiceToken;var o={ReportDefinition:{}};return this.arrayContainsArray(Object.getOwnPropertyNames(n),t)?1!==n.ReportName.match(/[0-9A-Za-z!\-_.*\'()]+/g).length?{error:"Invalid 'ReportName' property: '".concat(n.ReportName,"'")}:(Array.isArray(n.S3Bucket)&&(n.S3Bucket=n.S3Bucket[0]),Object.getOwnPropertyNames(n).forEach((function(e){if(r.ap[e].hasOwnProperty("vv")&&!Array.isArray(r.ap[e].vv)&&!r.ap[e].vv.includes(n[e]))return console.log("uhsdufdi"),{error:"Invalid configuration specified for '"+e+"' ('"+n[e]+"' instead of one of '"+r.ap[e].vv.join(", ")+"')"};r.ap[e].hasOwnProperty("vv")&&Array.isArray(r.ap[e].vv)&&Array.isArray(n[e])?(n[e].forEach((function(t){if(!r.ap[e].vv.includes(t))return{error:"Invalid configuration specified for '"+e+"' ('"+t+"' instead of one of '"+r.ap[e].vv.join(", ")+"')"}})),o.ReportDefinition[e]=n[e]):o.ReportDefinition[e]="RefreshClosedReports"===e?Boolean(n[e]):n[e]})),o):{error:"Not all required properties specified ("+t.join(", ")+")"}}}])&&r(t.prototype,n),e}();e.exports=t},342:(e,r,t)=>{function n(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}var i=t(211),a=t(835),s=new(t(529));function u(e,r,t,i){var a,u=s.getConfiguration(r.ResourceProperties);a="deleteReportDefinition"===i?{ReportName:u.ReportDefinition.ReportName}:"modifyReportDefinition"===i?function(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?n(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}({ReportName:u.ReportDefinition.ReportName},u):u,console.log(a),u.hasOwnProperty("error")?c(r,t,"FAILED",{messsage:u.error}):e.cur[i](a).promise().then((function(e){c(r,t,"SUCCESS",{message:"OK"})})).catch((function(e){c(r,t,"FAILED",e)}))}function c(e,r,t,n){var o=JSON.stringify({Status:t,Reason:n.message||n.code||"-",PhysicalResourceId:e.LogicalResourceId,StackId:e.StackId,RequestId:e.RequestId,LogicalResourceId:e.LogicalResourceId,Data:n}),s=a.parse(e.ResponseURL),u={hostname:s.hostname,port:443,path:s.path,method:"PUT",headers:{"content-type":"","content-length":o.length}},c=i.request(u,(function(e){r.done()}));c.on("error",(function(e){r.done()})),c.write(o),c.end()}e.exports=function(e){return function(r,t,n){try{!function(e,r,t){setTimeout((function(){new Promise((function(){return c(e,r,"FAILED",{message:"Timeout failure"})})).then((function(){return t(new Error("Function timed out"))}))}),r.getRemainingTimeInMillis()-1e3)}(r,t,n),"Create"===r.RequestType?u(e,r,t,"putReportDefinition"):"Update"===r.RequestType?u(e,r,t,"modifyReportDefinition"):"Delete"===r.RequestType&&u(e,r,t,"deleteReportDefinition")}catch(e){console.log(e),c(r,t,"FAILED",e)}}}},352:(e,r,t)=>{var n=t(480);e.exports.handler=t(342)({cur:new n.CUR({apiVersion:"2017-01-06"})})},480:e=>{"use strict";e.exports=require("aws-sdk")},211:e=>{"use strict";e.exports=require("https")},835:e=>{"use strict";e.exports=require("url")}},r={};return function t(n){if(r[n])return r[n].exports;var o=r[n]={exports:{}};return e[n](o,o.exports,t),o.exports}(352)})());
      Description: Cloudformation custom resource for Cost Usage ReportDefinition
      Handler: index.handler
      Role: 
        Fn::GetAtt: 
          - CustomCostUsageReportDefinitionLambdaExecutionRole
          - Arn
      Runtime: nodejs12.x
      Timeout: 30
    Type: AWS::Lambda::Function
  CustomCostUsageReportDefinitionLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaRole
      Policies:
        - PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - cur:PutReportDefinition
                  - cur:DeleteReportDefinition
                  - cur:ModifyReportDefinition
                Resource:
                  - 'Fn::Join':
                    - ':'
                    - - 'arn:aws:cur'
                      - Ref: 'AWS::Region'
                      - Ref: 'AWS::AccountId'
                      - 'definition/*'
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - 'Fn::Join':
                    - ':'
                    - - 'arn:aws:logs'
                      - Ref: 'AWS::Region'
                      - Ref: 'AWS::AccountId'
                      - 'log-group:/aws/lambda/*:*:*'
          PolicyName:
            'Fn::Join':
              - '-'
              - - 'CustomCostUsageReportDefinitionLambdaExecutionPolicy'
                - Ref: 'AWS::StackName'
    